import numpy as np
from sklearn.externals import joblib

# These are the feature labels from our data set
feature_labels = np.array(['year_built','bedrooms','bathroom','finished_sqft','lot_size_sqft','last_sold_price','region_id',
'city_44137',
'city_17827',
'city_19819',
'city_46984',
'city_44903',
'city_5169',
'city_38835',
'city_11491',
'city_25143',
'city_43381',
'city_19724',
'city_27912',
'city_47961',
'city_22330',
'city_38911',
'city_25968',
'city_42213',
'city_19654',
'city_48563',
'city_398243',
'city_4131',
'city_53018',
'city_38710',
'city_22369',
'city_47956',
'city_53809',
'city_12515',
'city_25884',
'city_31443',
'city_29390',
'city_11326',
'city_9859',
'city_6877',
'city_25687',
'city_26885',
'city_10081',
'city_20176',
'city_6679',
'city_50015',
'city_12368',
'city_18065',
'city_19592',
'city_48302',
'city_43328',
'city_5098',
'city_46267',
'city_26308',
'city_25045',
'city_33185',
'city_21367',
'city_9501',
'city_275730',
'city_11527',
'city_20206',
'city_40146',
'city_17621',
'city_17965',
'city_43697',
'city_6780',
'city_50052',
'city_10482',
'city_10871',
'city_28446',
'city_42713',
'city_56414',
'city_38388',
'city_275415',
'city_12970',
'city_275830',
'city_273684',
'city_275335',
'city_274724',
'city_276619',
'city_275833',
'city_274372',
'city_275990',
'city_275519',
'city_274692',
'city_275941',
'city_3699',
'city_37362',
'city_34059',
'city_39616',
'city_36150',
'city_14839',
'city_56428',
'city_39839',
'city_51806',
'city_16216',
'city_43078',
'city_13056',
'city_53733',
'city_13829',
'city_12067',
'city_415711',
'city_51976',
'city_276616',
'city_42270',
'city_192024',
'city_274603',
'city_21959',
'city_21214',
'city_50223',
'city_273753',
'city_30215',
'city_51722',
'city_23907',
'city_275443',
'city_40043',
'city_763342',
'city_274367',
'city_403176',
'city_274464',
'city_33911',
'city_25146',
'city_189019',
'city_273483',
'city_275707',
'city_54791',
'city_245503',
'city_276653',
'city_40038',
'city_31388',
'city_8762',
'city_762011',
'city_272945',
'city_5382',
'city_762010',
'city_48385',
'city_21685',
'city_189654',
'city_274157',
'city_36529',
'city_34896',
'city_18420',
'city_395751',
'city_41940',
'city_53420',
'city_12117',
'city_43583',
'city_49769',
'city_53105',
'city_397771',
'city_398997',
'city_29899',
'city_8759',
'city_13534',
'city_396484',
'city_189064',
'city_3752',
'city_42807',
'city_397829',
'city_13437',
'city_398431',
'city_47885',
'city_397220',
'city_38545',
'city_272593',
'city_35236',
'city_397524',
'city_25599',
'city_396009',
'city_11144',
'city_0',
'city_9195',
'city_397185',
'city_21851',
'city_53418',
'city_48902',
'city_32998',
'city_39960',
'city_6060',
'city_6468',
'city_50250',
'city_397995',
'city_190473',
'city_17117',
'city_24120',
'city_27808',
'city_19870',
'city_53952',
'city_27446',
'city_43491',
'city_47392',
'city_30048',
'city_190055',
'city_264176',
'city_19873',
'city_764248',
'city_7165',
'city_51034',
'city_25074',
'city_764251',
'city_26185',
'city_189284',
'city_764250',
'city_764254',
'city_153287',
'city_26460',
'city_20068',
'city_16217',
'city_764252',
'city_764253',
'city_764249',
'city_52380',
'city_182086',
'city_39910',
'city_20883',
'city_27319',
'city_27896',
'city_20391',
'city_31092',
'city_8854',
'city_33445',
'city_36718',
'city_41030',
'city_46727',
'city_55745',
'city_10836',
'city_18815',
'city_13593',
'city_42402',
'city_28407',
'city_29512',
'city_46805',
'city_760927',
'city_22667',
'city_52178',
'city_760928',
'city_35008',
'city_32570',
'city_9669',
'city_396176',
'city_398130',
'city_53876',
'city_5027',
'city_396692',
'city_395813',
'city_399001',
'city_43866',
'city_397929',
'city_397430',
'city_18622',
'city_398116',
'city_397322',
'city_396679',
'city_188902',
'city_399239',
'city_398451',
'city_399186',
'city_18469',
'city_397495',
'city_17072'
])

# Load the trained model created with HomeEstimatorTrainModel.py
model = joblib.load('trained_house_classifier_model.pkl')

# Create a numpy array based on the model's feature importances
importance = model.feature_importances_

# Sort the feature labels based on the feature importance rankings from the model
feauture_indexes_by_importance = importance.argsort()

# Print each feature label, from most important to least important (reverse order)

for index in feauture_indexes_by_importance:
    print("{} - {:.2f}%".format(feature_labels[index], (importance[index] * 100.0)))
